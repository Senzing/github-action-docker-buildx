# github-action-docker-buildx-build.yml
name: Run docker buildx build
description: Prepare the environment and run docker buildx build.
author: support@senzing.com

inputs:
   dockerBuildOptions:
      description: Additional options to pass to docker buildx build
   dockerContext:
      default: "."
      description: Context (directory) of the docker build process
   dockerImageRepository:
      description: Docker repository (e.g. senzing/senzingapi-runtime)
      required: true
   dockerImageTag:
      default: ${{ github.ref_name }}
      description: Docker image tag
   dockerPassword:
      default: ${{ secrets.DOCKERHUB_PASSWORD }}
      description: Password for Docker registry
   dockerPlatforms:
      default: linux/amd64
      description: Comma-separated list of docker platforms to build (hint - See output of docker buildx ls)
   dockerRegistryServer:
      default: docker.io
      description: Docker registry server
   dockerUsername:
      default: ${{ secrets.DOCKERHUB_USERNAME }}
      description: Username for Docker registry

runs:
   using: composite
   steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
           fetch-depth: "0"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker list platforms
        run: docker buildx ls
        shell: bash
      - name: Dockerhub login
        run: echo ${{ inputs.dockerPassword }} | docker login -u ${{ inputs.dockerUsername }} --password-stdin ${{ inputs.dockerRegistryServer }}
        shell: bash
      - name: Docker build images
        run: |
           docker buildx build \
              --platform ${{ inputs.dockerPlatforms }} \
              --tag ${{ inputs.dockerRegistryServer }}/${{ inputs.dockerImageRepository }}:${{ inputs.dockerImageTag }} \
              --tag ${{ inputs.dockerRegistryServer }}/${{ inputs.dockerImageRepository }}:latest \
              ${{ inputs.dockerBuildOptions }} \
              ${{ inputs.dockerContext }}
        shell: bash

branding:
   icon: upload-cloud
   color: green
